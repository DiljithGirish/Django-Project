name: CI + CD | Build images, push to ECR, apply Terraform

on:
  push:
    branches: [ "main" ]        # ‚Üê run on every commit/merge to main
  workflow_dispatch:            # manual trigger if you need it

jobs:
  deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: terraformfiles   # all TF commands in this dir

    permissions:
      contents: read
      id-token: write   # not strictly required with key pair auth

    env:                       # shared by all steps
      AWS_REGION:            ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID:        830105350342        
      TF_IN_AUTOMATION:      "true"
      AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
    # ------------------- checkout -------------------
    - name: Checkout
      uses: actions/checkout@v4

    # ------------------- ECR login ------------------
    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    # ------------------- build & push BACKEND -------
    - name: Build backend image
      run: |
        docker build -f Dockerfile.backend -t backend:ci -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/backend-repo:latest .

    - name: Push backend image
      run: |
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/backend-repo:latest

    # ------------------- build & push FRONTEND ------
    - name: Build frontend image
      run: |
        docker build -f Dockerfile.frontend -t frontend:ci -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/frontend-repo:latest .

    - name: Push frontend image
      run: |
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/frontend-repo:latest

    # ------------------- Terraform Setup ------------
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.7.5

    - name: Terraform init
      run: terraform init

    - name: Terraform validate
      run: terraform validate

    - name: Terraform plan
      run: terraform plan -out=tfplan

    - name: Terraform apply
      run: terraform apply -auto-approve tfplan

